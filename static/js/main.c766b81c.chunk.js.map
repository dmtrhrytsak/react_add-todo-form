{"version":3,"sources":["api/todos.ts","api/users.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["todos","userId","id","title","completed","users","name","username","email","TodoItem","todo","user","className","TodoList","map","preparedTodos","todosFromServer","find","App","state","taskDetails","isTaskDetailsProvided","isUserSelected","handleTitleChange","event","target","value","length","setState","setNewuser","addTodo","currentUser","userFromServer","newTodo","clearForm","validateSumbitData","handleSubmit","preventDefault","this","onSubmit","htmlFor","onChange","type","placeholder","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c766b81c.chunk.js","sourcesContent":["/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 4,\n    id: 1,\n    title: 'Reject a pull request',\n    completed: true,\n  },\n  {\n    userId: 5,\n    id: 2,\n    title: 'Perform illegal surgery on a student',\n    completed: false,\n  },\n];\n\nexport default todos;\n","const users = [\n  {\n    id: 1,\n    name: 'Roman Apostol',\n    username: 'Roman',\n    email: 'Roman@gmail.com',\n  },\n  {\n    id: 2,\n    name: 'Anna Apostol',\n    username: 'Anna',\n    email: 'Anna@gmail.com',\n  },\n  {\n    id: 3,\n    name: 'Max Lysak',\n    username: 'Max',\n    email: 'Max@gmail.com',\n  },\n  {\n    id: 4,\n    name: 'Aliona Ionova',\n    username: 'Aliona',\n    email: 'Aliona@gmail.com',\n  },\n  {\n    id: 5,\n    name: 'Yurii Holiuk',\n    username: 'Yurii',\n    email: 'Yurii@gmail.com',\n  },\n  {\n    id: 6,\n    name: 'Illia Vovchenko',\n    username: 'Illia',\n    email: 'Illia@gmail.com',\n  },\n  {\n    id: 7,\n    name: 'Ihor Nahnybida',\n    username: 'Ihor',\n    email: 'Ihor@gmail.com',\n  },\n  {\n    id: 8,\n    name: 'Alina Matuschak',\n    username: 'Alina',\n    email: 'Alina@gmail.com',\n  },\n  {\n    id: 9,\n    name: 'Pelahiia Khalishkhova',\n    username: 'Pelahiia',\n    email: 'Pelahiia@gmail.com',\n  },\n  {\n    id: 10,\n    name: 'Nadiia Martynets',\n    username: 'Nadiia',\n    email: 'Nadiia@gmail.com',\n  },\n];\n\nexport default users;\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\n\nimport './TodoItem.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { user } = todo;\n\n  return (\n    <li className=\"TodoItem\">\n      <div className=\"TodoItem__user-info\">\n        <div className=\"TodoItem_user-info-content\">\n          <p className=\"TodoItem__user-name\">{user?.name}</p>\n          <p className=\"TodoItem__user-email\">{user?.email}</p>\n        </div>\n      </div>\n\n      <div className=\"TodoItem__todo-info\">\n        <p className=\"TodoItem__todo-title\">{todo.title}</p>\n        <p className=\"TodoItem__todo-status\">\n          {todo.completed ? 'Done' : 'Pending...'}\n        </p>\n      </div>\n    </li>\n  );\n};\n","import React from 'react';\n\nimport { TodoItem } from '../TodoItem';\nimport { Todo } from '../../types/Todo';\n\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoItem key={todo.id} todo={todo} />\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport users from './api/users';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst preparedTodos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: users.find((user) => user.id === todo.userId) || null,\n}));\n\ntype State = {\n  todos: Todo[];\n  taskDetails: string;\n  user: string;\n  isTaskDetailsProvided: boolean;\n  isUserSelected: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: [...preparedTodos],\n    taskDetails: '',\n    user: '',\n    isTaskDetailsProvided: true,\n    isUserSelected: true,\n  };\n\n  handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const taskDetails = event.target.value;\n\n    if (taskDetails.length >= 80) {\n      return;\n    }\n\n    this.setState({\n      taskDetails,\n      isTaskDetailsProvided: true,\n    });\n  };\n\n  setNewuser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      user: event.target.value,\n      isUserSelected: true,\n    });\n  };\n\n  addTodo = () => {\n    const { todos, taskDetails, user } = this.state;\n\n    // eslint-disable-next-line operator-linebreak\n    const currentUser: User | null =\n      users.find((userFromServer) => userFromServer.name === user) || null;\n\n    if (!currentUser) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      userId: currentUser.id,\n      id: todos.length + 1,\n      title: taskDetails,\n      completed: false,\n      user: currentUser,\n    };\n\n    this.setState((state) => ({\n      todos: [...state.todos, newTodo],\n    }));\n  };\n\n  clearForm = () => {\n    this.setState({\n      taskDetails: '',\n      user: '',\n    });\n  };\n\n  validateSumbitData = () => {\n    const { taskDetails, user } = this.state;\n\n    this.setState({\n      isTaskDetailsProvided: taskDetails !== '',\n    });\n\n    this.setState({\n      isUserSelected: user !== '',\n    });\n\n    return taskDetails && user;\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    // eslint-disable-next-line no-console\n    if (!this.validateSumbitData()) {\n      return;\n    }\n\n    this.addTodo();\n    this.clearForm();\n  };\n\n  render() {\n    // eslint-disable-next-line object-curly-newline\n    const { todos, taskDetails, user, isTaskDetailsProvided, isUserSelected } = this.state;\n\n    return (\n      <div className=\"App\">\n        <form className=\"AddTodo\" onSubmit={this.handleSubmit}>\n          <div className=\"AddTodo__API\">\n            <div className=\"AddTodo__user-select-wrapper\">\n              {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n              <label htmlFor=\"userSelect\" className=\"AddTodo__user-label\">\n                Choose a user:\n              </label>\n\n              <select\n                name=\"user\"\n                id=\"userSelect\"\n                value={user}\n                className=\"AddTodo__user-select\"\n                onChange={this.setNewuser}\n              >\n                <option value=\"\">Please choose a user</option>\n                {users.map(({ id, name }) => (\n                  <option key={id} value={name}>\n                    {name}\n                  </option>\n                ))}\n              </select>\n\n              {!isUserSelected && (\n                <p className=\"AddTodo__error\">Please, select a user</p>\n              )}\n            </div>\n\n            <div className=\"AddTodo__input-wrapper\">\n              {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n              <label htmlFor=\"title\" className=\"AddTodo__task-label\">\n                TODO:\n              </label>\n\n              <input\n                type=\"text\"\n                name=\"taskDetails\"\n                id=\"title\"\n                value={taskDetails}\n                placeholder=\"Task deatils\"\n                className=\"AddTodo__task-field\"\n                onChange={this.handleTitleChange}\n              />\n\n              {!isTaskDetailsProvided && (\n                <p className=\"AddTodo__error\">Please, provide task deatils</p>\n              )}\n            </div>\n          </div>\n\n          <button type=\"submit\" className=\"AddTodo__button\">\n            Make the user labor\n          </button>\n        </form>\n\n        <TodoList todos={todos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}